import re
from mpl_toolkits.basemap import Basemap
import matplotlib.pyplot as plt
import pandas as pd
import geopandas as gpd
from shapely.geometry import Point, Polygon

stringText = ''
testEvent = "201500979" #gute testnummer: 201500917
eventLength = 0
currEventSpace = 0
lonVals = [0] * 100
latVals = [0] * 100

#Open File
with open('testCoord.txt', 'r') as f:
    lines = f.readlines()

#Remove first 2 Lines
del lines[0]
del lines[0]

#Replace Spaces
lines = [line.replace(' ', ',') for line in lines]

for x in lines:
    stringText += x

#Split String
stringTextSplit = re.split(r',|\n', stringText)

#Filter String
def removeEmptyStrings(element):
    if element == '':
        return False
    
    return True
def removeZero(element):
    if element == 0:
        return False
    
    return True

filteredTextTemp = filter(removeEmptyStrings, stringTextSplit)
filteredText = list(filteredTextTemp)

#Get Lon,Lat from specific Event
for i in range(len(filteredText)):
    if filteredText[i] == "Event:":
        if filteredText[i+1] == testEvent:
            currEventSpace = i+1
            eventLength = int(filteredText[i+5])
            break
    if i == len(filteredText) - 1:
        print("Event Nummer wurde nicht gefunden.")
        quit()
    

tickIndex = currEventSpace + 15
if filteredText[currEventSpace] == testEvent:
    for x in range(eventLength):
        lonVals[x] = filteredText[tickIndex]
        latVals[x] = filteredText[tickIndex+1]
        tickIndex += 17

#Filter empty array elements
lonValsFiltered = filter(removeZero, lonVals)
lonValsFilteredList = list(lonValsFiltered)
latValsFiltered = filter(removeZero, latVals)
latValsFilteredList = list(latValsFiltered)

#Print Solution
print("Lon Values:", lonValsFilteredList, "Lat Values:", latValsFilteredList)

#Convert to float
for i in range(0, len(lonValsFilteredList)):
    lonValsFilteredList[i] = float(lonValsFilteredList[i])

for i in range(0, len(latValsFilteredList)):
    latValsFilteredList[i] = float(latValsFilteredList[i])

#Plot Result
fig = plt.figure(figsize=(12,9))
m = Basemap(projection = 'mill', llcrnrlat = -90, urcrnrlat = 90, llcrnrlon = -180, urcrnrlon = 180, resolution = 'c')

# drawing the coastline
m.drawcoastlines()
m.drawcountries(color='gray')
m.drawstates(color='gray')

# plotting the map
m.scatter(lonValsFilteredList, latValsFilteredList, latlon = True, s = 50, c = 'red', marker = 'X', alpha = 1)

# convert lon lat to correct values
correctedLonValsFilteredList = lonValsFilteredList
#correctedLatValsFilteredList = latValsFilteredList
for i in range(len(correctedLonValsFilteredList)):
    correctedLonValsFilteredList[i] = (correctedLonValsFilteredList[i] + 180) % 360 - 180

x, y = m(correctedLonValsFilteredList, latValsFilteredList)
m.plot(x, y, '-', color = 'red', markersize = 5, linewidth = 1.5)

m.scatter([5,4,10,8,20], [10,5,3,8,15], latlon = True, s = 500, c = 'green', marker = 'o', alpha = 0.6)
plt.show()

#Write File
#with open('testCoord.txt', 'w') as f:
#    f.writelines(lines)